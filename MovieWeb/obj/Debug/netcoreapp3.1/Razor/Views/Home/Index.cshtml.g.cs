#pragma checksum "C:\Users\filip\Desktop\DARKO\MovieWeb-master\MovieWeb-master\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d0db33ab284a1b4bc973b812061a3fd9f935dab5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\filip\Desktop\DARKO\MovieWeb-master\MovieWeb-master\Views\_ViewImports.cshtml"
using MovieWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\filip\Desktop\DARKO\MovieWeb-master\MovieWeb-master\Views\_ViewImports.cshtml"
using MovieWeb.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d0db33ab284a1b4bc973b812061a3fd9f935dab5", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f640bfdd757640a6654c6eaea0bdf22951440147", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("clas", new global::Microsoft.AspNetCore.Html.HtmlString("img-fluid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Bright.jpeg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\filip\Desktop\DARKO\MovieWeb-master\MovieWeb-master\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            WriteLiteral(@"
<div class=""container"" id=""movieData"">
    <div>
        <h2 class=""text-center section-title"">Top Rated Movies</h2>

        <div class=""card-container"" id=""topMovies"">

        </div>

    </div>

    <div>
        <h2 class=""text-center section-title"">Movies</h2>
        <div class=""d-flex justify-content-center"" id=""searchContainer"">
            <div class=""form-inline d-flex justify-content-center align-items-center"">
                <i class=""fas fa-search"" aria-hidden=""true""></i>
                <input type=""text"" placeholder=""Search""
                       id=""SearchAllMovies"">
            </div>
        </div>
        <div class=""allMovies"">
            <div class=""card-container"" id=""movieContainer"">
            </div>
        </div>
        <div class=""moviePages text-center"">
            <ul class=""d-inline-flex list-inline"">
                <li><button id=""prev"">prev</button></li>
                <li>
                    <ul class=""d-inline-flex list-inline"">
                        <li><button ");
            WriteLiteral(@"id=""page1"">1</button></li>
                        <li><button id=""page2"">2</button></li>
                        <li><button id=""page3"">3</button></li>
                    </ul>
                </li>
                <li><button id=""next"">next</button></li>
            </ul>
        </div>
    </div>
</div>

<!-- Modal -->
<div class=""modal fade"" id=""movieDetails"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""blur-image""></div>
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body d-flex"">
                <div id=""img-container"">
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d0db33ab284a1b4bc973b812061a3fd9f935dab56068", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                </div>
                <div id=""details-container"">
                    <h3 class=""movie-title"">Title (date)</h3>
                    <ul class=""d-flex list-inline"" id=""details"">
                        <li><i class=""fas fa-star rating"" style=""color:yellow;""></i></li>
                        <li><span id=""rating""> rating / </span></li>
                        <li><span id=""runtime""> runtime / </span></li>
                        <li><span id=""genres""> genres  </span></li>
");
            WriteLiteral(@"                    </ul>
                    <p id=""summary"">lorem ipusm dolor is est. Enamasd  ksadd  asjdnaksdh  asbashjd </p>
                    <ul class=""list-inline"" id=""cast"">
                        <li><strong>Writen by: </strong><span id=""writers""> StolePopov, i dr</span></li>
                        <li><strong>Directed by: </strong><span id=""directors"">  StolePopov, i dr</span></li>
                        <li><strong>Starring: </strong><span id=""actors"">StolePopov, i drugarite</span></li>
                    </ul>
                </div>
            </div>
            <div class=""modal-footer"">
            </div>
        </div>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            var topMovies;
            var allMovies;
            $.ajax({
                type: ""GET"",
                url: ""/api/MoviesApi/GetTopMovies/5"",
                dataType: ""json"",
                success: function (data) {
                    topMovies = data;
                    RenderMovies(topMovies, ""#topMovies"");
                    CardHover(""#topMovies"");

                },
                error: function () {
                    alert(""error"");
                }
            });
            $.ajax({
                type: ""GET"",
                url: ""/api/MoviesApi"",
                dataType: ""json"",
                success: function (data) {
                    allMovies = data;
                    RenderMovies(allMovies, ""#movieContainer"");
                    CardHover(""#movieContainer"");
                },
                error: function () {
                    alert(""error"");
                }
            });

            function ");
                WriteLiteral(@"Runtime(time) {
                var num = time;
                var hours = (num / 60);
                var rhours = Math.floor(hours);
                var minutes = (hours - rhours) * 60;
                var rminutes = Math.round(minutes);
                return rhours + ""h "" + rminutes + ""min."";
            };

            function RenderMovies(movies, id) {
                for (var i = 0; i < movies.length; i++) {
                    var genreList = """";
                    for (var g = 0; g < movies[i].genres.length; g++) {
                        genreList += movies[i].genres[g] + "" "";
                    }
                    var actorList = """";
                    for (var e = 0; e < movies[i].actors.length; e++) {
                        if (e === movies[i].actors.length - 1) {
                            actorList += movies[i].actors[e].personName + """";
                        }
                        else {
                            actorList += movies[i].actors[e].personName + "", "";
             ");
                WriteLiteral(@"           }
                    }

                    $(id).append(
                        '<div class=""card"" id=""movie' + movies[i].id + '""><button class=""price-card"">' + movies[i].moviePrice +
                        '<i class=""fas fa-shopping-cart""></i></button><div class=""movie-card-img""><img class=""img-fluid"" src=""/images/' +
                        movies[i].moviePosterURL + '"" alt=""Card image cap"" /></div><div class=""card-body""><h5 class=""card-title"">' +
                        movies[i].movieTitle + '</h5><div class=""card-detail-container""><span id=""runtime""> ' + Runtime(movies[i].runtime) + ' /</span>' +
                        '<span id=""rating""><i class=""fas fa-star"" style=""color:yellow;""></i> ' + movies[i].movieRating + ' /</span>' +
                        '<span id=""genres"">' + genreList + '</span></div><p class=""card-text"">' + actorList + '</p></div>' +
                        '<div class=""card-btn-container""><button type=""button"" data-toggle=""modal"" data-target=""#movieDetails"" data-id=""' +
");
                WriteLiteral(@"                        movies[i].id + '""><i class=""fas fa-info""></i></button><button><i class=""far fa-heart""></i></button></div></div>'
                    );
                }
            }
            function CardHover(id) {
                $(id).find("".card"").hover(function () {
                    $(this).find("".movie-card-img"").toggleClass(""mask-img"");
                    $(this).find("".card-body"").toggleClass(""mask-body"");
                });
            }
            $('#movieDetails').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget) // Button that triggered the modal
                var movieId = button.data('id') // Extract info from data-* attributes
                var modal = $(this)

                $.ajax({
                    url: ""/api/MoviesApi/"" + movieId,
                    success: function (data) {
                        var listOfDirector = """";
                        var listOfWriters = """";
                        var listOfActors = """";
    ");
                WriteLiteral(@"                    var genres = """";
                        modal.find('.movie-title').text(data.movieTitle + ""("" + moment(data.releaseDate).format(""YYYY"") + "")"");
                        modal.find(""img"").attr(""src"", ""../images/"" + data.moviePosterURL);
                        modal.find('#rating').text(data.movieRating + "" / "");
                        modal.find('#runtime').text(Runtime(data.runtime) + "" / "");
                        modal.find('#summary').text(data.summary);

                        for (var i = 0; i < data.genres.length; i++) {
                            genres += data.genres[i] + "" "";
                        }
                        modal.find(""#genres"").text(genres);

                        for (var i = 0; i < data.directors.length; i++) {
                            if (i === data.directors.length - 1)
                                listOfDirector += data.directors[i].personName;
                            else
                                listOfDirector += data.directors[i].");
                WriteLiteral(@"personName + "", "";
                        }
                        modal.find(""#directors"").text(listOfDirector);


                        for (var i = 0; i < data.writers.length; i++) {
                            if (i === data.writers.length - 1)
                                listOfWriters += data.writers[i].personName;
                            else
                                listOfWriters += data.writers[i].personName + "", "";

                        }
                        modal.find(""#writers"").text(listOfWriters);


                        for (var i = 0; i < data.actors.length; i++) {
                            if (i === data.actors.length - 1)
                                listOfActors += data.actors[i].personName;
                            else
                                listOfActors += data.actors[i].personName + "", "";
                        }
                        modal.find(""#actors"").text(listOfActors);

                    }
                });
                // Upd");
                WriteLiteral(@"ate the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            })

            $(""#SearchAllMovies"").keyup(function () {
                event.preventDefault();

                $(""#movieContainer"").empty();
                var search = $(this).val();
                console.log(search)
                $.ajax({
                    type: ""GET"",
                    url: ""/api/MoviesApi/SearchMovies/"" + search,
                    dataType: ""json"",
                    success: function (data) {
                        allMovies = data;
                        RenderMovies(allMovies, ""#movieContainer"");
                        CardHover(""#movieContainer"");
                    },
                    error: function () {
                        alert(""error"");
                    }
                });

            })



        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
